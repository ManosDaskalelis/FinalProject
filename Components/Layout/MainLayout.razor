@using Project.Utility
@inherits LayoutComponentBase

@inject AuthenticationStateProvider _authenticationStateProvider;

<div class="page">
    <AuthorizeView Roles="@Roles.Admin.ToString()">
        <div class="sidebar">
            <NavMenu />
        </div>
    </AuthorizeView>

    <main>
        @if (isNavActive)
        {
            <NavBar></NavBar>
        }
        @Body
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool isNavActive;

    protected override async Task OnInitializedAsync()
    {
        isNavActive = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        isNavActive = await ShowNavBar();
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!authenticated)
        {
            return true;
        }

        if (!user.IsInRole(Roles.Admin.ToString()))
        {
            return true;
        }

        return false;
    }

    private int MathCustomPow(int num, int pow) {
        for (int i = 0; i <= pow; i++) {
            num *= num;
        };
        return num;
    }
}