@implements IDisposable

@inject NavigationManager NavigationManager

<div class="d-flex flex-column vh-100">
    <div class="d-flex flex-column bg-dark text-light shadow-sm" style="width: 250px;">
        <div class="navbar-brand fw-bold p-3 text-warning">Project</div>
        <nav class="nav flex-column nav-pills">
            <div class="">
                <NavLink class="nav-link text-light d-flex align-items-center" href="/" Match="NavLinkMatch.All">
                    <i class="bi bi-house-door me-2"></i> Home
                </NavLink>
            </div>
            <NavLink class="nav-link text-light d-flex align-items-center" href="category">
                <i class="bi bi-list-check me-2"></i> Category
            </NavLink>
            <NavLink class="nav-link text-light d-flex align-items-center" href="product">
                <i class="bi bi-box-seam me-2"></i> Product
            </NavLink>
            <NavLink class="nav-link text-light" href="/order/list">
                <i class="bi bi-card-list"></i> Order List
            </NavLink>
            <AuthorizeView>
                <Authorized>
                    @* <NavLink class="nav-link text-light d-flex align-items-center" href="Account/Manage"> *@
                    @*     <i class="bi bi-person me-2"></i> @context.User.Identity?.Name *@
                    @* </NavLink> *@
                    <form action="Account/Logout" method="post" class="p-0">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link text-light border-0 bg-transparent d-flex align-items-center">
                            <i class="bi bi-box-arrow-left me-2"></i> Logout
                        </button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link text-light d-flex align-items-center" href="Account/Register">
                        <i class="bi bi-person-plus me-2"></i> Register
                    </NavLink>
                    <NavLink class="nav-link text-light d-flex align-items-center" href="Account/Login">
                        <i class="bi bi-box-arrow-in-right me-2"></i> Login
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </nav>
    </div>
    <div class="flex-grow-1 p-4">
    </div>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}



@* @implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Project</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link p-2" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link p-2" href="category" Match="NavLinkMatch.All">
                <h4 class="bi bi-list-check" aria-hidden="true"></h4> Category
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link p-2" href="product" Match="NavLinkMatch.All">
                <h4 class="bi bi-box-seam-fill" aria-hidden="true"></h4> Product
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link p-2" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link p-2" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link p-2" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link p-2" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

 *@